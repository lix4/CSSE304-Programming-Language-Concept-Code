(reverse*-k '(1 ((2)) 4) (make-init-k))

(reverse*-k (1 ((2)) 4) #1(init-k))

(reverse*-k (((2)) 4) #3(rev1 #1(init-k) (1 ((2)) 4)))

(reverse*-k (4)
            #3(rev1
               #3(rev1 #1(init-k) (1 ((2)) 4))
               (((2)) 4)))

(reverse*-k ()
            #3(rev1
               #3(rev1
                  #3(rev1 #1(init-k) (1 ((2)) 4))
                  (((2)) 4))
               (4)))

(apply-continuation #3(rev1
                       #3(rev1
                          #3(rev1
                             #1(init-k)
                             (1 ((2)) 4))
                          (((2)) 4))
                       (4)) ())

(append-k ()
          (4)
          #3(rev1
             #3(rev1 #1(init-k) (1 ((2)) 4))
             (((2)) 4)))

(apply-continuation #3(rev1
                       #3(rev1 #1(init-k) (1 ((2)) 4))
                       (((2)) 4)) (4))

(reverse*-k ((2))
            #4(rev2
               (((2)) 4)
               (4)
               #3(rev1 #1(init-k) (1 ((2)) 4))))

(reverse*-k ()
            #3(rev1
               #4(rev2
                  (((2)) 4)
                  (4)
                  #3(rev1 #1(init-k) (1 ((2)) 4)))
               ((2))))

(apply-continuation #3(rev1
                       #4(rev2
                          (((2)) 4)
                          (4)
                          #3(rev1 #1(init-k) (1 ((2)) 4)))
                       ((2)))
                    ())

(reverse*-k (2)
            #4(rev2
               ((2))
               ()
               #4(rev2
                  (((2)) 4)
                  (4)
                  #3(rev1 #1(init-k) (1 ((2)) 4)))))

(reverse*-k ()
            #3(rev1
               #4(rev2
                  ((2))
                  ()
                  #4(rev2
                     (((2)) 4)
                     (4)
                     #3(rev1 #1(init-k) (1 ((2)) 4))))
               (2)))

(apply-continuation #3(rev1
                       #4(rev2
                          ((2))
                          ()
                          #4(rev2
                             (((2)) 4)
                             (4)
                             #3(rev1 #1(init-k) (1 ((2)) 4))))
                       (2))
                    ())

(append-k ()
          (2)
          #4(rev2
             ((2))
             ()
             #4(rev2
                (((2)) 4)
                (4)
                #3(rev1 #1(init-k) (1 ((2)) 4)))))

(apply-continuation #4(rev2
                       ((2))
                       ()
                       #4(rev2
                          (((2)) 4)
                          (4)
                          #3(rev1 #1(init-k) (1 ((2)) 4))))
                    (2))

(append-k ()
          ((2))
          #4(rev2
             (((2)) 4)
             (4)
             #3(rev1 #1(init-k) (1 ((2)) 4))))

(apply-continuation #4(rev2
                       (((2)) 4)
                       (4)
                       #3(rev1 #1(init-k) (1 ((2)) 4)))
                    ((2)))

(append-k (4)
          (((2)))
          #3(rev1 #1(init-k) (1 ((2)) 4)))

(append-k ()
          (((2)))
          #3(append-cont
             #3(rev1 #1(init-k) (1 ((2)) 4))
             (4)))

(apply-continuation #3(append-cont
                       #3(rev1 #1(init-k) (1 ((2)) 4))
                       (4))
                    (((2))))

(apply-continuation #3(rev1 #1(init-k) (1 ((2)) 4))
                    (4 ((2))))

(append-k (4 ((2)))
          (1)
          #1(init-k))

(append-k (((2)))
          (1)
          #3(append-cont
             #1(init-k)
             (4 ((2)))))

(append-k ()
          (1)
          #3(append-cont
             #3(append-cont #1(init-k) (4 ((2))))
             (((2)))))

(apply-continuation #3(append-cont
                       #3(append-cont #1(init-k) (4 ((2))))
                       (((2))))
                    (1))
(apply-continuation #3(append-cont #1(init-k) (4 ((2))))
                    (((2)) 1))

(apply-continuation #1(init-k)
                    (4 ((2)) 1))

answer: (4 ((2)) 1)

